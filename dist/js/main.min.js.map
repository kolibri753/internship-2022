{"version":3,"sources":["script.js"],"names":["ko","list","this","MainList","addTask","taskTitle","tasks","push","title","alert","deleteTask","task","forEach","index","arr","checkTask","taskStatus","_this","unchecked","checked","status","updateLocalStorage","checkLocalStorage","localStorage","getItem","JSON","parse","loadFromLocalStorage","saveToLocalStorage","setItem","stringify","splice","applyBindings","self","observable","newTask","viewModel","deleteFromLocalStorage","document","MainListViewModel"],"mappings":"cAAA,SAAWA,GACT,IAsGEC,EAAA,IAvEa,WAAfC,KAAIC,MAAW,GAGbD,KAAKE,QAAU,SAAUC,GAApBD,EAMHF,KAAKI,MAAMC,KAAK,CAAhBC,MAAKF,EACHE,OAAOH,KANTI,MAAKJ,6BAWPH,KAAKQ,WAAa,SAAUL,GAA5BH,KAAKQ,MAAAA,QAAa,SAAAC,EAAUN,EAAAA,GACrBC,EAAMM,QAAQP,GAACM,EAAME,OAAOC,EAAQ,MAK3CZ,KAAKa,UAAY,SAAUV,EAAWW,GAAY,IAAAC,EAAAf,KAA7Ca,EAAY,sBAAiCG,EAAA,wBAChDhB,KAAMiB,MAAOP,QAAG,SAAAD,EAAAE,EAAAC,GACVI,EAAAA,QAAYb,IAEbC,IAAcY,GACbP,EAAIE,GAAJO,OAAef,EACjBY,EAAID,mBAAeE,EAAWC,KAI5BL,EAAID,GAAOO,OAASF,EAFpBD,EAAII,mBAAJhB,EAAAa,QASRhB,KAJKoB,kBAAA,WACF,IAMChB,EApBJ,OAAAiB,aAAAC,QAAA,SAoBY,GAFVC,KAAAC,MAAAH,aAAAC,QAAA,UAOA,OALOlB,GAQTJ,KALGyB,qBAAA,WAMDzB,KAAKI,MAAQJ,KAAKoB,qBAGpBpB,KAAK0B,mBAAqB,SAAUvB,GAJpCH,KAAKyB,MAAAA,KAAAA,oBACHzB,KAAKI,MAALC,KAAa,CADfC,MAAAH,EAQIe,OAAQ,0BAHVG,aAAaM,QAAKP,QAAAA,KAALQ,UAAb5B,KAAAI,SAQFJ,KALIkB,uBAAQ,SAAAf,GAFMH,KAAhBI,MAAAJ,KAAAoB,oBAFFpB,KAAAI,MAAAM,QAAA,SAAAD,EAAAE,EAAAC,GAaQH,EAAKH,QAAUH,GAAWS,EAAIiB,OAAOlB,EAAO,KAHlDU,aAAaM,QAAKP,QAAAA,KAALQ,UAAb5B,KAAAI,SAQFJ,KANEmB,mBAAA,SAAAhB,EAAAW,GAGAO,KAAAA,MAAaM,KAAAA,oBANf3B,KAAAI,MAAAM,QAAA,SAAAD,EAAAE,EAAAC,GAYQH,EAAKH,QAAUH,IAAWS,EAAID,GAAOO,OAASJ,KADpDO,aAAWX,QAAQ,QAACD,KAAME,UAAPX,KAAsBI,UAU7CN,EAAGgC,cAFH,IAhHwB,SAAU/B,GADnC,IAAAgC,EAAc/B,KAEXA,KAAI+B,KAAOhC,EAEXC,KAAKD,QAAOA,EAAZiC,WAAA,IACAhC,KAAKiC,MAALnC,EAAeA,kBAGfE,KAAKE,QAAU,WAAfF,KAAKE,KAALA,QAAeF,KAAAiC,WACbjC,KAAKD,KAAKG,mBAAa+B,KAAvBA,WACAjC,KAAKD,QAAK2B,IACV1B,KAAKiC,MAAAA,KAALlC,KAAAK,QAIFJ,KAAKQ,WAAa,SAAU0B,GAA5BH,EAAKvB,KAAAA,WAAa0B,EAAUA,OAC1BH,EAAKhC,KAAKS,uBAAqBF,EAA/BA,OACAyB,EAAKhC,MAAKoC,EAAAA,KAAAA,QAIZnC,KAAKa,UAAY,SAAUqB,GAA3BH,EAAKlB,KAAAA,UAAYqB,EAAUA,MAAWA,EAAAhB,QACpCa,EAAKhC,MAAKc,EAAAA,KAAUqB,QAItBlC,KAAKyB,qBAAuB,WAA5BM,EAAKN,KAAAA,uBACHM,EAAKhC,MAAK0B,EAAAA,KAAAA,QAsFd,CAAW1B,GAETqC,SAACN,cACGO,UApHR,CAuHGvC","file":"main.min.js","sourcesContent":["(function (ko) {\n  var MainListViewModel = function (list) {\n    var self = this;\n\n    this.list = list;\n    this.newTask = ko.observable(\"\");\n    this.tasks = ko.observableArray();\n\n    this.addTask = function () {\n      this.list.addTask(this.newTask());\n      this.list.saveToLocalStorage(this.newTask());\n      this.newTask(\"\");\n      this.tasks(this.list.tasks);\n    };\n\n    this.deleteTask = function (viewModel) {\n      self.list.deleteTask(viewModel.title);\n      self.list.deleteFromLocalStorage(viewModel.title);\n      self.tasks(self.list.tasks);\n    };\n\n    this.checkTask = function (viewModel) {\n      self.list.checkTask(viewModel.title, viewModel.status);\n      self.tasks(self.list.tasks);\n    };\n\n    this.loadFromLocalStorage = function () {\n      self.list.loadFromLocalStorage();\n      self.tasks(self.list.tasks);\n    };\n  };\n\n  var MainList = function () {\n    this.tasks = [];\n\n    this.addTask = function (taskTitle) {\n      if (!taskTitle) {\n        alert(\"The ToDo can't be empty!\");\n        return;\n      }\n\n      this.tasks.push({\n        title: taskTitle,\n        status: \"\",\n      });\n    };\n\n    this.deleteTask = function (taskTitle) {\n      this.tasks.forEach((task, index, arr) => {\n        if (task.title === taskTitle) arr.splice(index, 1);\n      });\n    };\n\n    this.checkTask = function (taskTitle, taskStatus) {\n      const checked = \"item__text--checked\";\n      const unchecked = \"item__text--unchecked\";\n\n      this.tasks.forEach((task, index, arr) => {\n        if (task.title === taskTitle) {\n          if (taskStatus === unchecked) {\n            arr[index].status = checked;\n            this.updateLocalStorage(taskTitle, checked);\n          } else {\n            arr[index].status = unchecked;\n            this.updateLocalStorage(taskTitle, unchecked);\n          }\n        }\n      });\n    };\n\n    this.checkLocalStorage = function () {\n      let tasks;\n      if (localStorage.getItem(\"tasks\") === null) {\n        tasks = [];\n      } else {\n        tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      }\n\n      return tasks;\n    };\n\n    this.loadFromLocalStorage = function () {\n      this.tasks = this.checkLocalStorage();\n    };\n\n    this.saveToLocalStorage = function (taskTitle) {\n      this.tasks = this.checkLocalStorage();\n      this.tasks.push({\n        title: taskTitle,\n        status: \"item__text--unchecked\",\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    };\n\n    this.deleteFromLocalStorage = function (taskTitle) {\n      this.tasks = this.checkLocalStorage();\n\n      this.tasks.forEach((task, index, arr) => {\n        if (task.title === taskTitle) arr.splice(index, 1);\n      });\n      localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    };\n\n    this.updateLocalStorage = function (taskTitle, taskStatus) {\n      this.tasks = this.checkLocalStorage();\n      this.tasks.forEach((task, index, arr) => {\n        if (task.title === taskTitle) arr[index].status = taskStatus;\n      });\n\n      localStorage.setItem(\"tasks\", JSON.stringify(this.tasks));\n    };\n  };\n\n  var list = new MainList();\n\n  ko.applyBindings(\n    new MainListViewModel(list),\n    document.querySelector(\".main\")\n  );\n})(ko);\n"]}